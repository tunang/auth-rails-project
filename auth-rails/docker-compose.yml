services:
  # === DỊCH VỤ RAILS MỚI CỦA BẠN ===
  web:
    # Build image từ Dockerfile trong thư mục hiện tại (.)
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: web-auth-rails-project
    # Khởi động lại container nếu nó bị lỗi
    restart: always
    # Chạy lệnh để khởi động server
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3001 -b '0.0.0.0'"
    # Ánh xạ thư mục code hiện tại vào trong container
    # Giúp bạn thay đổi code trên máy local và thấy kết quả ngay lập tức mà không cần build lại image

    env_file:
      - .env
    volumes:
      - .:/rails
    # Ánh xạ port 3001 của container ra port 3000 của máy host
    ports:
      - "3001:3001"
    # Các biến môi trường cần thiết cho Rails
    # environment:
    #   DATABASE_URL: postgresql://tuan2004:tuan2004@postgres:5432/postgres-auth-rails-project
    #   REDIS_URL: redis://redis:6379/1
    #   ELASTICSEARCH_URL: http://elastic:tuan2004@elasticsearch:9200
    #   RAILS_MASTER_KEY: YOUR_RAILS_MASTER_KEY_HERE
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: worker-auth-rails-project
    restart: always
    command: bundle exec sidekiq -C config/sidekiq.yml
    env_file:
      - .env
    volumes:
      - .:/rails
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started

  postgres:
    image: postgres:16
    container_name: postgres-auth-rails-project
    restart: always
    environment:
      POSTGRES_USER: tuan2004
      POSTGRES_PASSWORD: tuan2004
      POSTGRES_DB: postgres-auth-rails-project
    ports:
      - "54432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis-auth-rails-project
    restart: always
    ports:
      - "56379:6379"
    volumes:
      - "redis_data:/data"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: es-auth-rails-project
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=tuan2004 # mật khẩu user "elastic"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false # tắt SSL cho dễ test
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-fsS",
          "-u",
          "elastic:tuan2004",
          "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana-auth-rails-project
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=tuan2004
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  redis_data:
  es_data:
